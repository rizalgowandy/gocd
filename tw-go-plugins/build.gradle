import com.thoughtworks.go.build.DownloadFile
import com.thoughtworks.go.build.GithubArtifact
import com.thoughtworks.go.build.VerifyJarTask
import org.apache.commons.codec.digest.DigestUtils

/*
 * Copyright Thoughtworks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

configurations {
  pluginsZipConfig
}

def dependencies = [
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-ldap-authentication-plugin',
    tagName: 'v2.3.0-386',
    asset: 'gocd-ldap-authentication-plugin-2.3.0-386.jar',
    checksum: 'c24ba5e9943d8aacb70f8dc4b0f91a7e387cb92799cfbc980b0fd85b7dd055f3'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-filebased-authentication-plugin',
    tagName: 'v2.2.0-300',
    asset: 'gocd-filebased-authentication-plugin-2.2.0-300.jar',
    checksum: '87432d1d830e333e9cf950d802501bce76e6af182ad567b38b5d6a6233c9ebc9'
  ),
  new GithubArtifact(
    user: 'tomzo',
    repo: 'gocd-yaml-config-plugin',
    tagName: 'v1.0.0-423',
    asset: 'yaml-config-plugin-1.0.0-423.jar',
    checksum: '8501cd8de9b9b21f673e65f1658552a11073a602a6c4a99ca7575b6f4854da88'
  ),
  new GithubArtifact(
    user: 'tomzo',
    repo: 'gocd-json-config-plugin',
    tagName: 'v1.0.0-273',
    asset: 'json-config-plugin-1.0.0-273.jar',
    checksum: '4e90500660813d1f570e6d3ba6646a1c279ad72bcf86236cf744846ff5bc0418'
  ),
  new GithubArtifact(
    user: 'gocd',
    repo: 'gocd-file-based-secrets-plugin',
    tagName: 'v1.2.0-310',
    asset: 'gocd-file-based-secrets-plugin-1.2.0-310.jar',
    checksum: '1455ac9874f44daf14c6fc4d9e3cf517de3e23cff6f5437fb224cabccc919ba8'
  )
]

task createVersionFile {
  def file = layout.buildDirectory.file("version.txt").get().asFile
  inputs.property('version', rootProject.version)
  inputs.property('gitRevision', rootProject.gitRevision)

  outputs.file file

  doLast {
    file.getParentFile().mkdirs()
    file.withWriter { out ->
      out.write("${rootProject.version} (${rootProject.gitRevision})")
    }
  }
}

task downloadPlugins {
}

task pluginsZip(type: Zip) {
  finalizedBy 'verifyPluginZip'

  archiveBaseName = 'plugins'
  dependsOn createVersionFile
  from(createVersionFile)

  from(dependencies.collect { dep -> destFile(dep) })
}

task verifyPluginZip(type: VerifyJarTask) {
  jarTask = pluginsZip

  expectedJars = [
    '/': dependencies.collect { dep -> "${dep.repo}.jar".toString() }
  ]
}

artifacts {
  pluginsZipConfig pluginsZip
}

dependencies.each { dep ->
  task "download-${dep.repo}"(type: DownloadFile) { downloadTask ->
    pluginsZip.dependsOn downloadTask
    downloadPlugins.dependsOn downloadTask
    downloadTask.src dep.downloadUrl
    downloadTask.dest destFile(dep)
    downloadTask.checksum = dep.checksum
  }

  pluginsZip.from(destFile(dep))
}

private File destFile(GithubArtifact dep) {
  new File(gradle.gradleUserHomeDir, "download-cache/${DigestUtils.md5Hex(dep.downloadUrl)}/${dep.repo}.jar")
}

task prepare(dependsOn: pluginsZip)
